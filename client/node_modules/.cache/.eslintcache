[{"/Users/vmeset/React/project01/client/src/index.js":"1","/Users/vmeset/React/project01/client/src/App.js":"2","/Users/vmeset/React/project01/client/src/components/AppRouter.js":"3","/Users/vmeset/React/project01/client/src/routes.js":"4","/Users/vmeset/React/project01/client/src/pages/Auth.js":"5","/Users/vmeset/React/project01/client/src/pages/List.js":"6","/Users/vmeset/React/project01/client/src/pages/Admin.js":"7","/Users/vmeset/React/project01/client/src/utils/consts.js":"8","/Users/vmeset/React/project01/client/src/store/UserStore.js":"9","/Users/vmeset/React/project01/client/src/store/NoteStore.js":"10","/Users/vmeset/React/project01/client/src/components/NavBar.js":"11","/Users/vmeset/React/project01/client/src/pages/NotePage.js":"12","/Users/vmeset/React/project01/client/src/components/Note.js":"13","/Users/vmeset/React/project01/client/src/http/userAPI.js":"14","/Users/vmeset/React/project01/client/src/http/index.js":"15","/Users/vmeset/React/project01/client/src/http/noteAPI.js":"16","/Users/vmeset/React/project01/client/src/components/Forma.js":"17","/Users/vmeset/React/project01/client/src/store/AlertStore.js":"18","/Users/vmeset/React/project01/client/src/components/ModalBlock.js":"19","/Users/vmeset/React/project01/client/src/components/AlertBlock.js":"20","/Users/vmeset/React/project01/client/src/components/SortBlock.js":"21"},{"size":508,"mtime":1645980533613,"results":"22","hashOfConfig":"23"},{"size":982,"mtime":1646555510455,"results":"24","hashOfConfig":"23"},{"size":870,"mtime":1646127255428,"results":"25","hashOfConfig":"23"},{"size":877,"mtime":1645382128620,"results":"26","hashOfConfig":"23"},{"size":3114,"mtime":1645382934243,"results":"27","hashOfConfig":"23"},{"size":2758,"mtime":1646558887569,"results":"28","hashOfConfig":"23"},{"size":144,"mtime":1645382917854,"results":"29","hashOfConfig":"23"},{"size":289,"mtime":1643192340911,"results":"30","hashOfConfig":"23"},{"size":399,"mtime":1641804805236,"results":"31","hashOfConfig":"23"},{"size":893,"mtime":1646123845792,"results":"32","hashOfConfig":"23"},{"size":4838,"mtime":1646587670208,"results":"33","hashOfConfig":"23"},{"size":564,"mtime":1646130202817,"results":"34","hashOfConfig":"23"},{"size":1906,"mtime":1646584263704,"results":"35","hashOfConfig":"23"},{"size":692,"mtime":1645653215065,"results":"36","hashOfConfig":"23"},{"size":405,"mtime":1637997164131,"results":"37","hashOfConfig":"23"},{"size":632,"mtime":1643379698979,"results":"38","hashOfConfig":"23"},{"size":1795,"mtime":1646131277090,"results":"39","hashOfConfig":"23"},{"size":1083,"mtime":1646555558268,"results":"40","hashOfConfig":"23"},{"size":1211,"mtime":1646129598437,"results":"41","hashOfConfig":"23"},{"size":529,"mtime":1646555587323,"results":"42","hashOfConfig":"23"},{"size":2155,"mtime":1646584145778,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"190qqmt",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},"/Users/vmeset/React/project01/client/src/index.js",[],["90","91"],"/Users/vmeset/React/project01/client/src/App.js",["92"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport AlertBlock from \"./components/AlertBlock\";\nimport {observer} from \"mobx-react-lite\"\nimport { Context } from \".\";\nimport { check } from \"./http/userAPI\";\nimport { Spinner } from \"react-bootstrap\";\nimport ModalBlock from \"./components/ModalBlock\";\n\nconst App = observer( () => {\n\n  const {user} = useContext(Context)\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    check().then(data => {\n      if(data) {\n        user.setIsAuth(true)\n        user.setUser(data)\n      }\n    }).finally(() => setIsLoading(false))\n  }, [])\n\n  if(isLoading) {\n    return <Spinner animation={\"grow\"} />\n  }\n\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <AlertBlock />\n      <ModalBlock />\n      <AppRouter />\n    </BrowserRouter>\n  );\n})\n\nexport default App;","/Users/vmeset/React/project01/client/src/components/AppRouter.js",[],"/Users/vmeset/React/project01/client/src/routes.js",[],"/Users/vmeset/React/project01/client/src/pages/Auth.js",[],"/Users/vmeset/React/project01/client/src/pages/List.js",["93"],"import React, { useContext, useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport { observer } from 'mobx-react-lite';\n\nimport { Container } from 'react-bootstrap';\n\nimport { Context } from '..';\nimport { fetchNotes } from '../http/noteAPI';\nimport Forma from '../components/Forma'\nimport SortBlock from '../components/SortBlock';\n\nconst List = observer ( () => {\n\n    const {note} = useContext(Context)\n    const {user} = useContext(Context)\n    const {pathname} = useLocation()\n\n    useEffect(() => {\n        fetchNotes(user.user.username, 1, 9).then(data => {\n            note.setNotes(data)\n        })\n    }, [])\n\n    let filterNotes = []\n    let listTitle = \"Список задач\"\n\n    switch(pathname.slice(1)) {\n        case 'done':\n            filterNotes = note.notes.filter(note => note.isCompleted)\n            listTitle = \"Выполненные задачи\"\n            break;\n        case 'todo':\n            filterNotes = note.notes.filter(note => note.type === 'todo' && note.isCompleted === false)\n            listTitle = \"Поставленные задачи\"\n            break;\n        case '':\n            filterNotes = note.notes.filter(note => note.type === 'todo' && note.isCompleted === false)\n            listTitle = \"Поставленные задачи\"\n            break;\n        case 'buy':\n            filterNotes = note.notes.filter(note => note.type === 'buy' && note.isCompleted === false)\n            listTitle = \"Покупки\"\n            break;\n        default:\n            filterNotes = note.notes\n    }\n\n    // useEffect(() => {\n    //     fetchDevices(null, null, 1, 2).then(data => {\n    //         device.setDevices(data.rows)\n    //         device.setTotalCount(data.count)\n    //     })\n    // }, [])\n\n    // useEffect(() => {\n    //     fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\n    //         device.setDevices(data.rows)\n    //         device.setTotalCount(data.count)\n    //     })\n    // }, [device.page, device.selectedType, device.selectedBrand,])\n\n    // useEffect(() => {\n    //     check().then(data => {\n    //       if(data) {\n    //         user.setIsAuth(true)\n    //         user.setUser(data)\n    //       }\n    //     }).finally(() => setIsLoading(false))\n    //   }, [])\n\n    return (\n        <Container>\n            <h4>\n                {listTitle}\n            </h4>\n            <Forma />\n            {/* <Button onClick={onSort}>\n                butt\n            </Button> */}\n            <SortBlock notes={filterNotes} />\n            {/* <ListGroup>\n                {filterNotes.map(note => <Note key={note._id} notka={note} />)}\n            </ListGroup> */}\n        </Container>\n    );\n});\n\nexport default List;","/Users/vmeset/React/project01/client/src/pages/Admin.js",[],"/Users/vmeset/React/project01/client/src/utils/consts.js",[],"/Users/vmeset/React/project01/client/src/store/UserStore.js",[],"/Users/vmeset/React/project01/client/src/store/NoteStore.js",[],"/Users/vmeset/React/project01/client/src/components/NavBar.js",["94","95","96"],"/Users/vmeset/React/project01/client/src/pages/NotePage.js",[],"/Users/vmeset/React/project01/client/src/components/Note.js",[],"/Users/vmeset/React/project01/client/src/http/userAPI.js",[],"/Users/vmeset/React/project01/client/src/http/index.js",[],"/Users/vmeset/React/project01/client/src/http/noteAPI.js",[],"/Users/vmeset/React/project01/client/src/components/Forma.js",[],"/Users/vmeset/React/project01/client/src/store/AlertStore.js",[],"/Users/vmeset/React/project01/client/src/components/ModalBlock.js",[],"/Users/vmeset/React/project01/client/src/components/AlertBlock.js",[],"/Users/vmeset/React/project01/client/src/components/SortBlock.js",["97"],"import { observer } from 'mobx-react-lite';\nimport React, {useState, useEffect} from 'react';\nimport { Button, ListGroup, Form, Row, Col } from 'react-bootstrap';\nimport _ from 'lodash';\n\nimport Note from '../components/Note';\n\nconst SortBlock = observer( ({notes}) => {\n\n    const [searchVal, setSearchVal] = useState(\"\")\n    const [sort, setSort] = useState('asc')\n    const [usNotes, setUsNotes] = useState([])\n\n    useEffect(() => {\n        setUsNotes(notes)\n        // eslint-disable-next-line\n    }, [notes])\n\n    const onSort = (type) => {\n        const copyNotes = notes.concat()\n        const sortType = sort === 'asc' ? 'desc' : 'asc'\n        const orderedNotes = _.orderBy(copyNotes, type, sortType)\n        setSort(sortType)\n        setUsNotes(orderedNotes)\n    }\n\n    return (\n        <ListGroup>\n            <Row className=\"justify-content-md-start mb-3\">\n                <Col xs lg=\"4\">\n                    Сортировка\n                    <Button variant={'outline-dark'}\n                        className='ms-2'\n                        onClick={() => {\n                            onSort(\"title\")\n                        }}\n                    >\n                        по имени\n                    </Button>\n                    <Button variant={'outline-dark'}\n                        className='ms-2'\n                        onClick={() => {\n                            onSort(\"date\")\n                        }}\n                    >\n                        по дате\n                    </Button>\n                </Col>\n                <Col md=\"8\">\n                    <Form.Control placeholder=\"поиск\"\n                        onChange={(e) => (setSearchVal(e.target.value))} \n                    />\n                </Col>\n            </Row>\n            {usNotes.filter(val => {\n                if (searchVal === \"\") {\n                    return val\n                } else if (val.title.toLowerCase().includes(searchVal.toLowerCase())) {\n                    return val\n                }\n            }).map(note => <Note key={note._id} notka={note} />)}\n        </ListGroup>\n    );\n});\n\nexport default SortBlock;",{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":24,"column":6,"nodeType":"104","endLine":24,"endColumn":8,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":22,"column":8,"nodeType":"104","endLine":22,"endColumn":10,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":2,"column":28,"nodeType":"110","messageId":"111","endLine":2,"endColumn":34},{"ruleId":"108","severity":1,"message":"112","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":17},{"ruleId":"108","severity":1,"message":"113","line":5,"column":36,"nodeType":"110","messageId":"111","endLine":5,"endColumn":46},{"ruleId":"114","severity":1,"message":"115","line":55,"column":33,"nodeType":"116","messageId":"117","endLine":55,"endColumn":35},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["120"],"React Hook useEffect has missing dependencies: 'note' and 'user.user.username'. Either include them or remove the dependency array.",["121"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'MAIN_ROUTE' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [user]",{"range":"126","text":"127"},"Update the dependencies array to be: [note, user.user.username]",{"range":"128","text":"129"},[753,755],"[user]",[636,638],"[note, user.user.username]"]