[{"/Users/vmeset/React/project01/client/src/index.js":"1","/Users/vmeset/React/project01/client/src/App.js":"2","/Users/vmeset/React/project01/client/src/components/AppRouter.js":"3","/Users/vmeset/React/project01/client/src/routes.js":"4","/Users/vmeset/React/project01/client/src/pages/Auth.js":"5","/Users/vmeset/React/project01/client/src/pages/List.js":"6","/Users/vmeset/React/project01/client/src/pages/Admin.js":"7","/Users/vmeset/React/project01/client/src/utils/consts.js":"8","/Users/vmeset/React/project01/client/src/store/UserStore.js":"9","/Users/vmeset/React/project01/client/src/store/NoteStore.js":"10","/Users/vmeset/React/project01/client/src/components/NavBar.js":"11","/Users/vmeset/React/project01/client/src/pages/NotePage.js":"12","/Users/vmeset/React/project01/client/src/components/Note.js":"13","/Users/vmeset/React/project01/client/src/http/userAPI.js":"14","/Users/vmeset/React/project01/client/src/http/index.js":"15","/Users/vmeset/React/project01/client/src/http/noteAPI.js":"16","/Users/vmeset/React/project01/client/src/components/Forma.js":"17"},{"size":413,"mtime":1637996958061,"results":"18","hashOfConfig":"19"},{"size":840,"mtime":1638439474748,"results":"20","hashOfConfig":"19"},{"size":907,"mtime":1641804714739,"results":"21","hashOfConfig":"19"},{"size":876,"mtime":1643193181881,"results":"22","hashOfConfig":"19"},{"size":3119,"mtime":1641823220244,"results":"23","hashOfConfig":"19"},{"size":2136,"mtime":1643561129185,"results":"24","hashOfConfig":"19"},{"size":171,"mtime":1638197427489,"results":"25","hashOfConfig":"19"},{"size":289,"mtime":1643192340911,"results":"26","hashOfConfig":"19"},{"size":399,"mtime":1641804805236,"results":"27","hashOfConfig":"19"},{"size":761,"mtime":1643560978194,"results":"28","hashOfConfig":"19"},{"size":3085,"mtime":1643193156919,"results":"29","hashOfConfig":"19"},{"size":564,"mtime":1644395745713,"results":"30","hashOfConfig":"19"},{"size":1596,"mtime":1644396076187,"results":"31","hashOfConfig":"19"},{"size":703,"mtime":1642334783050,"results":"32","hashOfConfig":"19"},{"size":405,"mtime":1637997164131,"results":"33","hashOfConfig":"19"},{"size":632,"mtime":1643379698979,"results":"34","hashOfConfig":"19"},{"size":2253,"mtime":1643201019729,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"190qqmt",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},"/Users/vmeset/React/project01/client/src/index.js",[],["76","77"],"/Users/vmeset/React/project01/client/src/App.js",["78"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\"\nimport { Context } from \".\";\nimport { check } from \"./http/userAPI\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst App = observer( () => {\n\n  const {user} = useContext(Context)\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    check().then(data => {\n      if(data) {\n        user.setIsAuth(true)\n        user.setUser(data)\n      }\n    }).finally(() => setIsLoading(false))\n  }, [])\n\n  if(isLoading) {\n    return <Spinner animation={\"grow\"} />\n  }\n\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <AppRouter />\n    </BrowserRouter>\n  );\n})\n\nexport default App;","/Users/vmeset/React/project01/client/src/components/AppRouter.js",["79"],"import React, { useContext } from 'react';\nimport {Routes, Route, Navigate} from 'react-router-dom'\nimport { Context } from '..';\nimport Auth from '../pages/Auth';\nimport { authRoutes, publicRoutes } from '../routes';\nimport { LOGIN_ROUTE, MAIN_ROUTE } from '../utils/consts';\n\nconst AppRouter = () => {\n    const {user} = useContext(Context)\n    const isAuth = user.isAuth\n\n    return (\n        <Routes>\n            {isAuth && authRoutes.map(({path, Component}) =>\n                <Route key={path} path={path} element={<Component/>} />\n            )}\n            {publicRoutes.map(({path, Component}) =>\n                <Route key={path} path={path} element={<Component/>} />\n            )}\n            {<Route path=\"*\" element={isAuth \n                ? <Navigate to={MAIN_ROUTE} /> \n                : <Navigate to ={LOGIN_ROUTE} />}\n            />}\n        </Routes>\n    );\n};\n\nexport default AppRouter;","/Users/vmeset/React/project01/client/src/routes.js",[],"/Users/vmeset/React/project01/client/src/pages/Auth.js",[],"/Users/vmeset/React/project01/client/src/pages/List.js",["80"],"import React, { useContext, useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport { observer } from 'mobx-react-lite';\n\nimport { Container, ListGroup } from 'react-bootstrap';\n\nimport { Context } from '..';\nimport { fetchNotes } from '../http/noteAPI';\nimport Forma from '../components/Forma'\nimport Note from '../components/Note';\n\nconst List = observer ( () => {\n\n    const {note} = useContext(Context)\n    const {user} = useContext(Context)\n    const {pathname} = useLocation()\n\n    useEffect(() => {\n        fetchNotes(user.user.username, 1, 9).then(data => {\n            note.setNotes(data)\n        })\n    }, [])\n\n    let filterNotes = []\n\n    switch(pathname.slice(1)) {\n        case 'done':\n            filterNotes = note.notes.filter(note => note.isCompleted)\n            break;\n        case 'todo':\n            filterNotes = note.notes.filter(note => note.type === 'todo' && note.isCompleted === false)\n            break;\n        case 'buy':\n            filterNotes = note.notes.filter(note => note.type === 'buy' && note.isCompleted === false)\n            break;\n        default:\n            filterNotes = note.notes\n    }\n\n    // useEffect(() => {\n    //     fetchDevices(null, null, 1, 2).then(data => {\n    //         device.setDevices(data.rows)\n    //         device.setTotalCount(data.count)\n    //     })\n    // }, [])\n\n    // useEffect(() => {\n    //     fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\n    //         device.setDevices(data.rows)\n    //         device.setTotalCount(data.count)\n    //     })\n    // }, [device.page, device.selectedType, device.selectedBrand,])\n\n    // useEffect(() => {\n    //     check().then(data => {\n    //       if(data) {\n    //         user.setIsAuth(true)\n    //         user.setUser(data)\n    //       }\n    //     }).finally(() => setIsLoading(false))\n    //   }, [])\n\n    return (\n        <Container>\n            <Forma />\n            <ListGroup>\n                {filterNotes.map(note => <Note key={note._id} notka={note} />)}\n            </ListGroup>\n        </Container>\n    );\n});\n\nexport default List;","/Users/vmeset/React/project01/client/src/pages/Admin.js",["81"],"import React from 'react';\nimport Auth from './Auth';\n\nconst Admin = () => {\n    return (\n        <div>\n            adminka\n        </div>\n    );\n};\n\nexport default Admin;","/Users/vmeset/React/project01/client/src/utils/consts.js",[],"/Users/vmeset/React/project01/client/src/store/UserStore.js",[],"/Users/vmeset/React/project01/client/src/store/NoteStore.js",[],"/Users/vmeset/React/project01/client/src/components/NavBar.js",[],"/Users/vmeset/React/project01/client/src/pages/NotePage.js",[],"/Users/vmeset/React/project01/client/src/components/Note.js",[],"/Users/vmeset/React/project01/client/src/http/userAPI.js",[],"/Users/vmeset/React/project01/client/src/http/index.js",[],"/Users/vmeset/React/project01/client/src/http/noteAPI.js",[],"/Users/vmeset/React/project01/client/src/components/Forma.js",["82"],"import React, { useState, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\n\nimport {Form} from 'react-bootstrap'\n\nimport { Context } from '..';\nimport { createNote } from '../http/noteAPI';\n\nconst Forma = observer ( () => {\n\n    const {user} = useContext(Context)\n    const {note} = useContext(Context)\n    const {pathname} = useLocation()\n\n    const [value, setValue] = useState('')\n\n    const click = event => {\n        event.preventDefault()\n\n        // useEffect(() => {\n        //     fetchNotes(user.user.username, 1, 9).then(data => {\n        //         note.setNotes(data)\n        //     })\n        // }, [])\n\n        if (value.trim()) {\n            try {\n                const newNote = {\n                    title: value,\n                    author: user.user.username,\n                    type: pathname.slice(1)\n                }\n                createNote(newNote).then(res => {\n                    note.addNote(res.data)\n                })\n                setValue('')\n            } catch (e) {\n                alert(e.message)\n            }\n            // const newNote = {\n            //     title: noteTitle,\n            //     author: user.user.username\n            // }\n            // const response = createNote(newNote)\n            // note.addNote(response)\n            \n            // console.log(response)\n        } else {\n            alert('Введите название заметки')\n        }\n        // setValue('')\n    }\n\n    return (\n        // <Form className=\"mt-2\" onSubmit={click}>\n        //     <Form.Group \n        //         className=\"mb-3\" \n        //         value={noteTitle} \n        //         onChange={e => setNoteTitle(e.target.value)}\n        //     >\n        //         <Form.Control placeholder=\"Add new note\" />\n        //     </Form.Group>\n        // </Form>\n        <form onSubmit={click}>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Введите название заметки\"\n                    value={value}\n                    onChange={e => setValue(e.target.value)}\n                />\n            </div>\n        </form>\n    );\n});\n\nexport default Forma;",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":22,"column":6,"nodeType":"89","endLine":22,"endColumn":8,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":12},{"ruleId":"87","severity":1,"message":"95","line":22,"column":8,"nodeType":"89","endLine":22,"endColumn":10,"suggestions":"96"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":12},{"ruleId":"91","severity":1,"message":"97","line":5,"column":9,"nodeType":"93","messageId":"94","endLine":5,"endColumn":13},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["100"],"no-unused-vars","'Auth' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'note' and 'user.user.username'. Either include them or remove the dependency array.",["101"],"'Form' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [user]",{"range":"106","text":"107"},"Update the dependencies array to be: [note, user.user.username]",{"range":"108","text":"109"},[653,655],"[user]",[637,639],"[note, user.user.username]"]