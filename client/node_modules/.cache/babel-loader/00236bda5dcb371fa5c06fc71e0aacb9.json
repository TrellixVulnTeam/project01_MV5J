{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/pages/NotePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useLocation } from 'react-router';\nimport { Context } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = observer(_c = _s(() => {\n  _s();\n\n  const {\n    note\n  } = useContext(Context);\n  const location = useLocation();\n  const noteId = location.pathname.slice(6);\n  const actualNote = note.notes.find(note => note._id === noteId);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: actualNote.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}, \"PLWNcInD50iSjDY7Gv/joD+B/Xk=\", false, function () {\n  return [useLocation];\n}));\n_c2 = NotePage;\nexport default NotePage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NotePage$observer\");\n$RefreshReg$(_c2, \"NotePage\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/pages/NotePage.js"],"names":["React","useContext","Container","useLocation","Context","NotePage","observer","note","location","noteId","pathname","slice","actualNote","notes","find","_id","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,OAAT,QAAwB,IAAxB;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,SAAG,MAAM;AAAA;;AAE9B,QAAM;AAACC,IAAAA;AAAD,MAASN,UAAU,CAACG,OAAD,CAAzB;AACA,QAAMI,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,MAAM,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,CAAxB,CAAf;AAEA,QAAMC,UAAU,GAAGL,IAAI,CAACM,KAAL,CAAWC,IAAX,CAAgBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaN,MAArC,CAAnB;AAEA,sBACI,QAAC,SAAD;AAAA,cACKG,UAAU,CAACI;AADhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAdwB;AAAA,UAGJb,WAHI;AAAA,GAAzB;MAAME,Q;AAgBN,eAAeA,QAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useLocation } from 'react-router';\nimport { Context } from '..';\n\nconst NotePage = observer ( () => {\n    \n    const {note} = useContext(Context)\n    const location = useLocation()\n\n    const noteId = location.pathname.slice(6)\n    \n    const actualNote = note.notes.find(note => note._id === noteId)\n\n    return (\n        <Container>\n            {actualNote.title}\n        </Container>\n    );\n});\n\nexport default NotePage;"]},"metadata":{},"sourceType":"module"}