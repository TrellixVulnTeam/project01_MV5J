{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/components/SortBlock.js\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react-lite';\nimport React, { useState, useEffect } from 'react';\nimport { Button, ListGroup, Form } from 'react-bootstrap';\nimport _ from 'lodash';\nimport Note from '../components/Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortBlock = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    notes\n  } = _ref;\n  const [searchVal, setSearchVal] = useState(\"\");\n  const [sort, setSort] = useState('asc');\n  const [usNotes, setUsNotes] = useState([]);\n  useEffect(() => {\n    setUsNotes(notes); // eslint-disable-next-line\n  }, [notes]);\n\n  const onSort = type => {\n    const copyNotes = notes.concat();\n    const sortType = sort === 'asc' ? 'desc' : 'asc';\n\n    const orderedNotes = _.orderBy(copyNotes, type, sortType);\n\n    setSort(sortType);\n    setUsNotes(orderedNotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [\"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\", /*#__PURE__*/_jsxDEV(Button, {\n        variant: 'outline-dark',\n        className: \"ms-2\",\n        onClick: () => {\n          onSort(\"title\");\n        },\n        children: \"\\u043F\\u043E \\u0438\\u043C\\u0435\\u043D\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: 'outline-dark',\n        className: \"me-2\",\n        onClick: () => {\n          onSort(\"date\");\n        },\n        children: \"\\u043F\\u043E \\u0434\\u0430\\u0442\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        placeholder: \"\\u043F\\u043E\\u0438\\u0441\\u043A\",\n        onChange: e => setSearchVal(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), usNotes.filter(val => {\n      if (searchVal == \"\") {\n        return val;\n      } else if (val.title.toLowerCase().includes(searchVal.toLowerCase())) {\n        return val;\n      }\n    }).map(note => /*#__PURE__*/_jsxDEV(Note, {\n      notka: note\n    }, note._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 28\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}, \"gHjwldl5Ac1Jlk9PujICHjhn9NI=\"));\n_c2 = SortBlock;\nexport default SortBlock;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SortBlock$observer\");\n$RefreshReg$(_c2, \"SortBlock\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/components/SortBlock.js"],"names":["observer","React","useState","useEffect","Button","ListGroup","Form","_","Note","SortBlock","notes","searchVal","setSearchVal","sort","setSort","usNotes","setUsNotes","onSort","type","copyNotes","concat","sortType","orderedNotes","orderBy","e","target","value","filter","val","title","toLowerCase","includes","map","note","_id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,QAAwC,iBAAxC;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,SAAS,GAAGT,QAAQ,SAAE,QAAa;AAAA;;AAAA,MAAZ;AAACU,IAAAA;AAAD,GAAY;AAErC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,UAAU,CAACN,KAAD,CAAV,CADY,CAEZ;AACH,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;;AAKA,QAAMO,MAAM,GAAIC,IAAD,IAAU;AACrB,UAAMC,SAAS,GAAGT,KAAK,CAACU,MAAN,EAAlB;AACA,UAAMC,QAAQ,GAAGR,IAAI,KAAK,KAAT,GAAiB,MAAjB,GAA0B,KAA3C;;AACA,UAAMS,YAAY,GAAGf,CAAC,CAACgB,OAAF,CAAUJ,SAAV,EAAqBD,IAArB,EAA2BG,QAA3B,CAArB;;AACAP,IAAAA,OAAO,CAACO,QAAD,CAAP;AACAL,IAAAA,UAAU,CAACM,YAAD,CAAV;AACH,GAND;;AAQA,sBACI,QAAC,SAAD;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8FAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,cAAjB;AACQ,QAAA,SAAS,EAAC,MADlB;AAEQ,QAAA,OAAO,EAAE,MAAM;AACXL,UAAAA,MAAM,CAAC,OAAD,CAAN;AACH,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAUI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,cAAjB;AACQ,QAAA,SAAS,EAAC,MADlB;AAEQ,QAAA,OAAO,EAAE,MAAM;AACXA,UAAAA,MAAM,CAAC,MAAD,CAAN;AACH,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAkBI,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAC,gCAA1B;AACI,QAAA,QAAQ,EAAGO,CAAD,IAAQZ,YAAY,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AADlC;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EA0BKX,OAAO,CAACY,MAAR,CAAgBC,GAAD,IAAS;AACrB,UAAIjB,SAAS,IAAI,EAAjB,EAAqB;AACjB,eAAOiB,GAAP;AACH,OAFD,MAEO,IAAIA,GAAG,CAACC,KAAJ,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCpB,SAAS,CAACmB,WAAV,EAAjC,CAAJ,EAA+D;AAClE,eAAOF,GAAP;AACH;AACJ,KANA,EAMEI,GANF,CAMMC,IAAI,iBAAI,QAAC,IAAD;AAAqB,MAAA,KAAK,EAAEA;AAA5B,OAAWA,IAAI,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA,YANd,CA1BL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CAvDyB,kCAA1B;MAAMzB,S;AAyDN,eAAeA,SAAf","sourcesContent":["import { observer } from 'mobx-react-lite';\nimport React, {useState, useEffect} from 'react';\nimport { Button, ListGroup, Form } from 'react-bootstrap';\nimport _ from 'lodash';\n\nimport Note from '../components/Note';\n\nconst SortBlock = observer( ({notes}) => {\n\n    const [searchVal, setSearchVal] = useState(\"\")\n    const [sort, setSort] = useState('asc')\n    const [usNotes, setUsNotes] = useState([])\n\n    useEffect(() => {\n        setUsNotes(notes)\n        // eslint-disable-next-line\n    }, [notes])\n\n    const onSort = (type) => {\n        const copyNotes = notes.concat()\n        const sortType = sort === 'asc' ? 'desc' : 'asc'\n        const orderedNotes = _.orderBy(copyNotes, type, sortType)\n        setSort(sortType)\n        setUsNotes(orderedNotes)\n    }\n\n    return (\n        <ListGroup>\n            <div className='mb-3'>\n                Сортировка\n                <Button variant={'outline-dark'}\n                        className='ms-2'\n                        onClick={() => {\n                            onSort(\"title\")\n                        }}\n                >\n                    по имени\n                </Button>\n                <Button variant={'outline-dark'}\n                        className='me-2'\n                        onClick={() => {\n                            onSort(\"date\")\n                        }}\n                >\n                    по дате\n                </Button>\n                <Form.Control placeholder=\"поиск\" \n                    onChange={(e) => (setSearchVal(e.target.value))} \n                />\n                {/* <input type=\"text\" placeholder={\"найди нужную заметку\"} \n                    onChange={(e) => (setSearchVal(e.target.value))}        \n                /> */}\n            </div>\n            {usNotes.filter((val) => {\n                if (searchVal == \"\") {\n                    return val\n                } else if (val.title.toLowerCase().includes(searchVal.toLowerCase())) {\n                    return val\n                }\n            }).map(note => <Note key={note._id} notka={note} />)}\n        </ListGroup>\n    );\n});\n\nexport default SortBlock;"]},"metadata":{},"sourceType":"module"}