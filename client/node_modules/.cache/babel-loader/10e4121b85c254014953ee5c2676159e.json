{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/components/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Navbar, Container, Button, Nav, NavDropdown } from 'react-bootstrap';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { Context } from '..';\nimport { ADMIN_ROUTE, LOGIN_ROUTE, MAIN_ROUTE, TO_DO_ROUTE, TO_BUY_ROUTE, DONE_ROUTE } from '../utils/consts';\nimport { observer } from 'mobx-react-lite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavBar = observer(_c = _s(() => {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    bg: \"light\",\n    expand: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"#\",\n        children: \"Navbar scroll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"navbarScroll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"navbarScroll\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          className: \"me-auto my-2 my-lg-0\",\n          style: {\n            maxHeight: '100px'\n          },\n          navbarScroll: true,\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"#action1\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"#action2\",\n            children: \"Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown, {\n            title: \"Link\",\n            id: \"navbarScrollingDropdown\",\n            children: [/*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n              href: \"#action3\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n              href: \"#action4\",\n              children: \"Another action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n              href: \"#action5\",\n              children: \"Something else here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"#\",\n            disabled: true,\n            children: \"Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"search\",\n            placeholder: \"Search\",\n            className: \"me-2\",\n            \"aria-label\": \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-success\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this) // <Navbar bg=\"dark\" variant=\"dark\" className='mb-2'>\n  //     <Container>\n  //         <Navbar.Brand>\n  //             {user.isAuth ? \n  //                 <span>{user.user.username}</span>\n  //                 : 'MyNotes'\n  //             }\n  //         </Navbar.Brand>\n  //         {/* <NavLink \n  //             style={{color: 'white'}}\n  //             to={MAIN_ROUTE}\n  //         >\n  //             {user.isAuth ? \n  //                 <span>{user.user.username}</span>\n  //                 : 'MyNotes'\n  //             }\n  //         </NavLink> */}\n  //         {/* <Button variant={'outline-light'}\n  //             onClick={() => console.log(user.isAuth)}\n  //         >\n  //             auth\n  //         </Button>\n  //         <Button variant={'outline-light'}\n  //             onClick={() => console.log(localStorage)}\n  //         >\n  //             localstorage\n  //         </Button> */}\n  //         {user.isAuth ?\n  //             <Nav className=\"me-auto\">\n  //                 <Nav.Link onClick={() => navigate(TO_DO_ROUTE)}>toDo</Nav.Link>\n  //                 <Nav.Link onClick={() => navigate(TO_BUY_ROUTE)}>toBuy</Nav.Link>\n  //                 <Nav.Link onClick={() => navigate(DONE_ROUTE)}>done</Nav.Link>\n  //                 {/* <Button variant={'outline-light'}\n  //                     onClick={() => navigate(TO_DO_ROUTE)}\n  //                 >\n  //                     toDo\n  //                 </Button>\n  //                 <Button variant={'outline-light'}\n  //                     onClick={() => navigate(TO_BUY_ROUTE)}\n  //                     className=\"mx-2\"\n  //                 >\n  //                     toBuy\n  //                 </Button>\n  //                 <Button variant={'outline-light'}\n  //                     onClick={() => navigate(DONE_ROUTE)}\n  //                 >\n  //                     done\n  //                 </Button> */}\n  //             </Nav>\n  //             : <Nav></Nav>\n  //         }\n  //         {user.isAuth ?\n  //             <Nav>\n  //                 {\n  //                     user.user.role === \"ADMIN\" ? \n  //                     <Nav.Link onClick={() => {\n  //                             navigate(ADMIN_ROUTE)\n  //                         }}\n  //                     >\n  //                         Админка\n  //                     </Nav.Link>\n  //                     // <Button variant={'outline-light'}\n  //                     // >\n  //                     //     <NavLink \n  //                     //         to={ADMIN_ROUTE}\n  //                     //         style={{color: 'white'}}\n  //                     //     >\n  //                     //         Админка\n  //                     //     </NavLink>\n  //                     // </Button>\n  //                     : <Nav></Nav>\n  //                 }\n  //                 <Nav.Link onClick={() => {\n  //                             user.setIsAuth(false)\n  //                             navigate(LOGIN_ROUTE)\n  //                             localStorage.removeItem('token')\n  //                         }}\n  //                 >\n  //                     Выйти\n  //                 </Nav.Link>\n  //                 {/* <Button variant={'outline-light'}\n  //                     className='ms-2'\n  //                     onClick={() => {\n  //                         user.setIsAuth(false)\n  //                         navigate(LOGIN_ROUTE)\n  //                         localStorage.removeItem('token')\n  //                     }}\n  //                 >\n  //                     Выйти\n  //                 </Button> */}\n  //             </Nav>\n  //             :\n  //             <Nav>\n  //                 {/* <Button variant={'outline-light'}\n  //                     onClick={() => {\n  //                         navigate(LOGIN_ROUTE)\n  //                     }}\n  //                 >\n  //                     Войти\n  //                 </Button> */}\n  //             </Nav>\n  //         }\n  //     </Container>\n  // </Navbar>\n  ;\n}, \"7S3fAd+nFcp3c3udYAOWSD/1Mwg=\", false, function () {\n  return [useNavigate];\n}));\n_c2 = NavBar;\nexport default NavBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavBar$observer\");\n$RefreshReg$(_c2, \"NavBar\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/components/NavBar.js"],"names":["React","useContext","Navbar","Container","Button","Nav","NavDropdown","NavLink","useNavigate","Context","ADMIN_ROUTE","LOGIN_ROUTE","MAIN_ROUTE","TO_DO_ROUTE","TO_BUY_ROUTE","DONE_ROUTE","observer","NavBar","user","navigate","maxHeight"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport {Navbar, Container, Button, Nav, NavDropdown} from 'react-bootstrap'\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { Context } from '..';\nimport { ADMIN_ROUTE, LOGIN_ROUTE, MAIN_ROUTE, TO_DO_ROUTE, TO_BUY_ROUTE, DONE_ROUTE } from '../utils/consts';\nimport {observer} from 'mobx-react-lite'\n\nconst NavBar = observer ( () => {\n\n    const {user} = useContext(Context)\n    const navigate = useNavigate()\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Container fluid>\n                <Navbar.Brand href=\"#\">Navbar scroll</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"navbarScroll\" />\n                <Navbar.Collapse id=\"navbarScroll\">\n                <Nav\n                    className=\"me-auto my-2 my-lg-0\"\n                    style={{ maxHeight: '100px' }}\n                    navbarScroll\n                >\n                    <Nav.Link href=\"#action1\">Home</Nav.Link>\n                    <Nav.Link href=\"#action2\">Link</Nav.Link>\n                    <NavDropdown title=\"Link\" id=\"navbarScrollingDropdown\">\n                    <NavDropdown.Item href=\"#action3\">Action</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action4\">Another action</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item href=\"#action5\">\n                        Something else here\n                    </NavDropdown.Item>\n                    </NavDropdown>\n                    <Nav.Link href=\"#\" disabled>\n                    Link\n                    </Nav.Link>\n                </Nav>\n                <Form className=\"d-flex\">\n                    <FormControl\n                    type=\"search\"\n                    placeholder=\"Search\"\n                    className=\"me-2\"\n                    aria-label=\"Search\"\n                    />\n                    <Button variant=\"outline-success\">Search</Button>\n                </Form>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n        // <Navbar bg=\"dark\" variant=\"dark\" className='mb-2'>\n        //     <Container>\n        //         <Navbar.Brand>\n        //             {user.isAuth ? \n        //                 <span>{user.user.username}</span>\n        //                 : 'MyNotes'\n        //             }\n        //         </Navbar.Brand>\n        //         {/* <NavLink \n        //             style={{color: 'white'}}\n        //             to={MAIN_ROUTE}\n        //         >\n        //             {user.isAuth ? \n        //                 <span>{user.user.username}</span>\n        //                 : 'MyNotes'\n        //             }\n        //         </NavLink> */}\n        //         {/* <Button variant={'outline-light'}\n        //             onClick={() => console.log(user.isAuth)}\n        //         >\n        //             auth\n        //         </Button>\n        //         <Button variant={'outline-light'}\n        //             onClick={() => console.log(localStorage)}\n        //         >\n        //             localstorage\n        //         </Button> */}\n        //         {user.isAuth ?\n        //             <Nav className=\"me-auto\">\n        //                 <Nav.Link onClick={() => navigate(TO_DO_ROUTE)}>toDo</Nav.Link>\n        //                 <Nav.Link onClick={() => navigate(TO_BUY_ROUTE)}>toBuy</Nav.Link>\n        //                 <Nav.Link onClick={() => navigate(DONE_ROUTE)}>done</Nav.Link>\n        //                 {/* <Button variant={'outline-light'}\n        //                     onClick={() => navigate(TO_DO_ROUTE)}\n        //                 >\n        //                     toDo\n        //                 </Button>\n        //                 <Button variant={'outline-light'}\n        //                     onClick={() => navigate(TO_BUY_ROUTE)}\n        //                     className=\"mx-2\"\n        //                 >\n        //                     toBuy\n        //                 </Button>\n        //                 <Button variant={'outline-light'}\n        //                     onClick={() => navigate(DONE_ROUTE)}\n        //                 >\n        //                     done\n        //                 </Button> */}\n        //             </Nav>\n        //             : <Nav></Nav>\n        //         }\n                \n        //         {user.isAuth ?\n        //             <Nav>\n        //                 {\n        //                     user.user.role === \"ADMIN\" ? \n        //                     <Nav.Link onClick={() => {\n        //                             navigate(ADMIN_ROUTE)\n        //                         }}\n        //                     >\n        //                         Админка\n        //                     </Nav.Link>\n        //                     // <Button variant={'outline-light'}\n        //                     // >\n        //                     //     <NavLink \n        //                     //         to={ADMIN_ROUTE}\n        //                     //         style={{color: 'white'}}\n        //                     //     >\n        //                     //         Админка\n        //                     //     </NavLink>\n        //                     // </Button>\n        //                     : <Nav></Nav>\n        //                 }\n        //                 <Nav.Link onClick={() => {\n        //                             user.setIsAuth(false)\n        //                             navigate(LOGIN_ROUTE)\n        //                             localStorage.removeItem('token')\n        //                         }}\n        //                 >\n        //                     Выйти\n        //                 </Nav.Link>\n        //                 {/* <Button variant={'outline-light'}\n        //                     className='ms-2'\n        //                     onClick={() => {\n        //                         user.setIsAuth(false)\n        //                         navigate(LOGIN_ROUTE)\n        //                         localStorage.removeItem('token')\n        //                     }}\n        //                 >\n        //                     Выйти\n        //                 </Button> */}\n        //             </Nav>\n        //             :\n        //             <Nav>\n        //                 {/* <Button variant={'outline-light'}\n        //                     onClick={() => {\n        //                         navigate(LOGIN_ROUTE)\n        //                     }}\n        //                 >\n        //                     Войти\n        //                 </Button> */}\n        //             </Nav>\n        //         }\n\n        //     </Container>\n        // </Navbar>\n    );\n});\n\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}