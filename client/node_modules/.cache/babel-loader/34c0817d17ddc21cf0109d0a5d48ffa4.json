{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/components/Forma.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Form } from 'react-bootstrap';\nimport { Context } from '..';\nimport { createNote } from '../http/noteAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forma = observer(_c = _s(() => {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  const {\n    note\n  } = useContext(Context);\n  const {\n    pathname\n  } = useLocation;\n  const [value, setValue] = useState('');\n\n  const click = event => {\n    event.preventDefault(); // useEffect(() => {\n    //     fetchNotes(user.user.username, 1, 9).then(data => {\n    //         note.setNotes(data)\n    //     })\n    // }, [])\n\n    if (value.trim()) {\n      try {\n        const newNote = {\n          title: value,\n          author: user.user.username\n        };\n        createNote(newNote).then(res => {\n          note.addNote(res.data);\n        });\n        setValue('');\n      } catch (e) {\n        alert(e.message);\n      } // const newNote = {\n      //     title: noteTitle,\n      //     author: user.user.username\n      // }\n      // const response = createNote(newNote)\n      // note.addNote(response)\n      // console.log(response)\n\n    } else {\n      alert('Введите название заметки');\n    } // setValue('')\n\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Form className=\"mt-2\" onSubmit={click}>\n    //     <Form.Group \n    //         className=\"mb-3\" \n    //         value={noteTitle} \n    //         onChange={e => setNoteTitle(e.target.value)}\n    //     >\n    //         <Form.Control placeholder=\"Add new note\" />\n    //     </Form.Group>\n    // </Form>\n    _jsxDEV(\"form\", {\n      onSubmit: click,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438\",\n          value: value,\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  );\n}, \"9ll6DjlRhUaDd4JmNQmAHywML8E=\"));\n_c2 = Forma;\nexport default Forma;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Forma$observer\");\n$RefreshReg$(_c2, \"Forma\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/components/Forma.js"],"names":["React","useState","useContext","useLocation","observer","Form","Context","createNote","Forma","user","note","pathname","value","setValue","click","event","preventDefault","trim","newNote","title","author","username","then","res","addNote","data","e","alert","message","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAAQC,IAAR,QAAmB,iBAAnB;AAEA,SAASC,OAAT,QAAwB,IAAxB;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,MAAMC,KAAK,GAAGJ,QAAQ,SAAG,MAAM;AAAA;;AAE3B,QAAM;AAACK,IAAAA;AAAD,MAASP,UAAU,CAACI,OAAD,CAAzB;AACA,QAAM;AAACI,IAAAA;AAAD,MAASR,UAAU,CAACI,OAAD,CAAzB;AACA,QAAM;AAACK,IAAAA;AAAD,MAAaR,WAAnB;AAEA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMa,KAAK,GAAGC,KAAK,IAAI;AACnBA,IAAAA,KAAK,CAACC,cAAN,GADmB,CAGnB;AACA;AACA;AACA;AACA;;AAEA,QAAIJ,KAAK,CAACK,IAAN,EAAJ,EAAkB;AACd,UAAI;AACA,cAAMC,OAAO,GAAG;AACZC,UAAAA,KAAK,EAAEP,KADK;AAEZQ,UAAAA,MAAM,EAAEX,IAAI,CAACA,IAAL,CAAUY;AAFN,SAAhB;AAIAd,QAAAA,UAAU,CAACW,OAAD,CAAV,CAAoBI,IAApB,CAAyBC,GAAG,IAAI;AAC5Bb,UAAAA,IAAI,CAACc,OAAL,CAAaD,GAAG,CAACE,IAAjB;AACH,SAFD;AAGAZ,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,OATD,CASE,OAAOa,CAAP,EAAU;AACRC,QAAAA,KAAK,CAACD,CAAC,CAACE,OAAH,CAAL;AACH,OAZa,CAad;AACA;AACA;AACA;AACA;AACA;AAEA;;AACH,KArBD,MAqBO;AACHD,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACH,KAhCkB,CAiCnB;;AACH,GAlCD;;AAoCA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAM,MAAA,QAAQ,EAAEb,KAAhB;AAAA,6BACI;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,wIAFhB;AAGI,UAAA,KAAK,EAAEF,KAHX;AAII,UAAA,QAAQ,EAAEc,CAAC,IAAIb,QAAQ,CAACa,CAAC,CAACG,MAAF,CAASjB,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAVJ;AAqBH,CAjEqB,kCAAtB;MAAMJ,K;AAmEN,eAAeA,KAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\n\nimport {Form} from 'react-bootstrap'\n\nimport { Context } from '..';\nimport { createNote } from '../http/noteAPI';\n\nconst Forma = observer ( () => {\n\n    const {user} = useContext(Context)\n    const {note} = useContext(Context)\n    const {pathname} = useLocation\n\n    const [value, setValue] = useState('')\n\n    const click = event => {\n        event.preventDefault()\n\n        // useEffect(() => {\n        //     fetchNotes(user.user.username, 1, 9).then(data => {\n        //         note.setNotes(data)\n        //     })\n        // }, [])\n\n        if (value.trim()) {\n            try {\n                const newNote = {\n                    title: value,\n                    author: user.user.username\n                }\n                createNote(newNote).then(res => {\n                    note.addNote(res.data)\n                })\n                setValue('')\n            } catch (e) {\n                alert(e.message)\n            }\n            // const newNote = {\n            //     title: noteTitle,\n            //     author: user.user.username\n            // }\n            // const response = createNote(newNote)\n            // note.addNote(response)\n            \n            // console.log(response)\n        } else {\n            alert('Введите название заметки')\n        }\n        // setValue('')\n    }\n\n    return (\n        // <Form className=\"mt-2\" onSubmit={click}>\n        //     <Form.Group \n        //         className=\"mb-3\" \n        //         value={noteTitle} \n        //         onChange={e => setNoteTitle(e.target.value)}\n        //     >\n        //         <Form.Control placeholder=\"Add new note\" />\n        //     </Form.Group>\n        // </Form>\n        <form onSubmit={click}>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Введите название заметки\"\n                    value={value}\n                    onChange={e => setValue(e.target.value)}\n                />\n            </div>\n        </form>\n    );\n});\n\nexport default Forma;"]},"metadata":{},"sourceType":"module"}