{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/components/AppRouter.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { authRoutes, publicRoutes } from '../routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  let isAuth = false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [isAuth && authRoutes.map(_ref => {\n        let {\n          path,\n          Component\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: path,\n          component: Component,\n          exact: true\n        }, path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }, this);\n      }), publicRoutes.map(_ref2 => {\n        let {\n          path,\n          Component\n        } = _ref2;\n\n        /*#__PURE__*/\n        _jsxDEV(Route, {\n          kety: path,\n          path: path,\n          component: Component,\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/components/AppRouter.js"],"names":["React","Switch","Route","Redirect","authRoutes","publicRoutes","AppRouter","isAuth","map","path","Component"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,WAAzC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,MAAIC,MAAM,GAAG,KAAb;AACA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,iBACCA,MAAM,IAAIH,UAAU,CAACI,GAAX,CAAe;AAAA,YAAC;AAACC,UAAAA,IAAD;AAAOC,UAAAA;AAAP,SAAD;AAAA,4BACtB,QAAC,KAAD;AAAkB,UAAA,IAAI,EAAED,IAAxB;AAA8B,UAAA,SAAS,EAAEC,SAAzC;AAAoD,UAAA,KAAK;AAAzD,WAAYD,IAAZ;AAAA;AAAA;AAAA;AAAA,gBADsB;AAAA,OAAf,CADX,EAICJ,YAAY,CAACG,GAAb,CAAiB,SAAuB;AAAA,YAAtB;AAACC,UAAAA,IAAD;AAAOC,UAAAA;AAAP,SAAsB;;AACrC;AAAA,gBAAC,KAAD;AAAO,UAAA,IAAI,EAAED,IAAb;AAAmB,UAAA,IAAI,EAAEA,IAAzB;AAA+B,UAAA,SAAS,EAAEC,SAA1C;AAAqD,UAAA,KAAK;AAA1D;AAAA;AAAA;AAAA;AAAA;AACH,OAFA,CAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAdD;;KAAMJ,S;AAgBN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport { authRoutes, publicRoutes } from '../routes';\n\nconst AppRouter = () => {\n    let isAuth = false\n    return (\n        <div>\n            <Switch>\n            {isAuth && authRoutes.map(({path, Component}) =>\n                <Route key={path} path={path} component={Component} exact />\n            )}\n            {publicRoutes.map(({path, Component}) => {\n                <Route kety={path} path={path} component={Component} exact />\n            })}\n            </Switch>\n        </div>\n    );\n};\n\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}