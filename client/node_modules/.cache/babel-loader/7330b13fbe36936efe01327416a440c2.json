{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/components/AppRouter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { Context } from '..';\nimport { authRoutes, publicRoutes } from '../routes';\nimport { LOGIN_ROUTE, MAIN_ROUTE } from '../utils/consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  const isAuth = user.isAuth;\n  console.log(isAuth);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [isAuth && authRoutes.map(_ref => {\n      let {\n        path,\n        Component\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 56\n        }, this)\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    }), publicRoutes.map(_ref2 => {\n      let {\n        path,\n        Component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        element: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 56\n        }, this)\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: isAuth ? /*#__PURE__*/_jsxDEV(Navigate, {\n        replace: true,\n        to: MAIN_ROUTE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        replace: true,\n        to: LOGIN_ROUTE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppRouter, \"JGtbL9nF23m+KDtp3kj55mw9GTc=\");\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/components/AppRouter.js"],"names":["React","useContext","Routes","Route","Navigate","Context","authRoutes","publicRoutes","LOGIN_ROUTE","MAIN_ROUTE","AppRouter","user","isAuth","console","log","map","path","Component"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,SAASC,OAAT,QAAwB,IAAxB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,WAAzC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,iBAAxC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAACC,IAAAA;AAAD,MAASV,UAAU,CAACI,OAAD,CAAzB;AACA,QAAMO,MAAM,GAAGD,IAAI,CAACC,MAApB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,sBACI,QAAC,MAAD;AAAA,eACKA,MAAM,IAAIN,UAAU,CAACS,GAAX,CAAe;AAAA,UAAC;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAD;AAAA,0BACtB,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAED,IAAxB;AAA8B,QAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAvC,SAAYA,IAAZ;AAAA;AAAA;AAAA;AAAA,cADsB;AAAA,KAAf,CADf,EAIKT,YAAY,CAACQ,GAAb,CAAiB;AAAA,UAAC;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAD;AAAA,0BACd,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAED,IAAxB;AAA8B,QAAA,OAAO,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAvC,SAAYA,IAAZ;AAAA;AAAA;AAAA;AAAA,cADc;AAAA,KAAjB,CAJL,eAOI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,OAAO,EAAEJ,MAAM,gBACzB,QAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAkB,QAAA,EAAE,EAAEH;AAAtB;AAAA;AAAA;AAAA;AAAA,cADyB,gBAEzB,QAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAkB,QAAA,EAAE,EAAGD;AAAvB;AAAA;AAAA;AAAA;AAAA;AAFN;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CApBD;;GAAME,S;;KAAAA,S;AAsBN,eAAeA,SAAf","sourcesContent":["import React, { useContext } from 'react';\nimport {Routes, Route, Navigate} from 'react-router-dom'\nimport { Context } from '..';\nimport { authRoutes, publicRoutes } from '../routes';\nimport { LOGIN_ROUTE, MAIN_ROUTE } from '../utils/consts';\n\nconst AppRouter = () => {\n    const {user} = useContext(Context)\n    const isAuth = user.isAuth\n\n    console.log(isAuth)\n\n    return (\n        <Routes>\n            {isAuth && authRoutes.map(({path, Component}) =>\n                <Route key={path} path={path} element={<Component/>} />\n            )}\n            {publicRoutes.map(({path, Component}) =>\n                <Route key={path} path={path} element={<Component/>} />\n            )}\n            <Route path=\"*\" element={isAuth \n                ? <Navigate replace to={MAIN_ROUTE} /> \n                : <Navigate replace to ={LOGIN_ROUTE} />}\n            />\n        </Routes>\n    );\n};\n\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}