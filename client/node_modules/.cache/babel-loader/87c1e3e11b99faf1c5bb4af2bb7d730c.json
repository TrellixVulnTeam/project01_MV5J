{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/components/Forma.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Form, Button } from 'react-bootstrap';\nimport { Context } from '..';\nimport { createNote } from '../http/noteAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forma = observer(_c = _s(() => {\n  _s();\n\n  const [value, setValue] = useState('');\n  const {\n    pathname\n  } = useLocation();\n  const {\n    user\n  } = useContext(Context);\n  const {\n    note\n  } = useContext(Context);\n  const {\n    alert\n  } = useContext(Context);\n\n  const click = event => {\n    event.preventDefault(); // useEffect(() => {\n    //     fetchNotes(user.user.username, 1, 9).then(data => {\n    //         note.setNotes(data)\n    //     })\n    // }, [])\n\n    if (value.trim()) {\n      try {\n        const newNote = {\n          title: value,\n          author: user.user.username,\n          type: pathname.slice(1)\n        };\n        createNote(newNote).then(res => {\n          note.addNote(res.data);\n        }).then(() => {\n          alert.showAlert(\"Заметка успешно создана\", \"success\");\n        });\n      } catch (e) {\n        alert.showAlert(e.message, \"danger\");\n      } // const newNote = {\n      //     title: noteTitle,\n      //     author: user.user.username\n      // }\n      // const response = createNote(newNote)\n      // note.addNote(response)\n      // console.log(response)\n\n    } else {\n      alert.showAlert('Введите название заметки', \"warning\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"mt-2\",\n    onSubmit: () => {\n      return setValue('');\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      value: value,\n      onChange: e => setValue(e.target.value),\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        placeholder: \"Add new note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => console.log(value),\n      children: \"XX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this) // <form onSubmit={click}>\n  //     <div>\n  //         <input\n  //             type=\"text\"\n  //             placeholder=\"Введите название заметки\"\n  //             value={value}\n  //             onChange={e => setValue(e.target.value)}\n  //         />\n  //     </div>\n  // </form>\n  ;\n}, \"+ICwKXllbr+Pne1XIagkbIWuLNU=\", false, function () {\n  return [useLocation];\n}));\n_c2 = Forma;\nexport default Forma;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Forma$observer\");\n$RefreshReg$(_c2, \"Forma\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/components/Forma.js"],"names":["React","useState","useContext","useLocation","observer","Form","Button","Context","createNote","Forma","value","setValue","pathname","user","note","alert","click","event","preventDefault","trim","newNote","title","author","username","type","slice","then","res","addNote","data","showAlert","e","message","target","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;AAEA,SAASC,OAAT,QAAwB,IAAxB;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,MAAMC,KAAK,GAAGL,QAAQ,SAAG,MAAM;AAAA;;AAE3B,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAACW,IAAAA;AAAD,MAAaT,WAAW,EAA9B;AAEA,QAAM;AAACU,IAAAA;AAAD,MAASX,UAAU,CAACK,OAAD,CAAzB;AACA,QAAM;AAACO,IAAAA;AAAD,MAASZ,UAAU,CAACK,OAAD,CAAzB;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAUb,UAAU,CAACK,OAAD,CAA1B;;AAEA,QAAMS,KAAK,GAAGC,KAAK,IAAI;AACnBA,IAAAA,KAAK,CAACC,cAAN,GADmB,CAGnB;AACA;AACA;AACA;AACA;;AAEA,QAAIR,KAAK,CAACS,IAAN,EAAJ,EAAkB;AACd,UAAI;AACA,cAAMC,OAAO,GAAG;AACZC,UAAAA,KAAK,EAAEX,KADK;AAEZY,UAAAA,MAAM,EAAET,IAAI,CAACA,IAAL,CAAUU,QAFN;AAGZC,UAAAA,IAAI,EAAEZ,QAAQ,CAACa,KAAT,CAAe,CAAf;AAHM,SAAhB;AAKAjB,QAAAA,UAAU,CAACY,OAAD,CAAV,CAAoBM,IAApB,CAAyBC,GAAG,IAAI;AAC5Bb,UAAAA,IAAI,CAACc,OAAL,CAAaD,GAAG,CAACE,IAAjB;AACH,SAFD,EAEGH,IAFH,CAEQ,MAAM;AACVX,UAAAA,KAAK,CAACe,SAAN,CAAgB,yBAAhB,EAA2C,SAA3C;AACH,SAJD;AAKH,OAXD,CAWE,OAAMC,CAAN,EAAS;AACPhB,QAAAA,KAAK,CAACe,SAAN,CAAgBC,CAAC,CAACC,OAAlB,EAA2B,QAA3B;AACH,OAda,CAed;AACA;AACA;AACA;AACA;AACA;AAEA;;AACH,KAvBD,MAuBO;AACHjB,MAAAA,KAAK,CAACe,SAAN,CAAgB,0BAAhB,EAA4C,SAA5C;AACH;AACJ,GAnCD;;AAqCA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAE,MAAM;AACnC,aAAOnB,QAAQ,CAAC,EAAD,CAAf;AACH,KAFD;AAAA,4BAGI,QAAC,IAAD,CAAM,KAAN;AACI,MAAA,SAAS,EAAC,MADd;AAEI,MAAA,KAAK,EAAED,KAFX;AAGI,MAAA,QAAQ,EAAEqB,CAAC,IAAIpB,QAAQ,CAACoB,CAAC,CAACE,MAAF,CAASvB,KAAV,CAH3B;AAAA,6BAKI,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAUI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMwB,OAAO,CAACC,GAAR,CAAYzB,KAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAeI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBJ;AA0BH,CAxEqB;AAAA,UAGCP,WAHD;AAAA,GAAtB;MAAMM,K;AA0EN,eAAeA,KAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\n\nimport {Form, Button} from 'react-bootstrap'\n\nimport { Context } from '..';\nimport { createNote } from '../http/noteAPI';\n\nconst Forma = observer ( () => {\n\n    const [value, setValue] = useState('')\n    const {pathname} = useLocation()\n\n    const {user} = useContext(Context)\n    const {note} = useContext(Context)\n    const {alert} = useContext(Context)\n\n    const click = event => {\n        event.preventDefault()\n\n        // useEffect(() => {\n        //     fetchNotes(user.user.username, 1, 9).then(data => {\n        //         note.setNotes(data)\n        //     })\n        // }, [])\n\n        if (value.trim()) {\n            try {\n                const newNote = {\n                    title: value,\n                    author: user.user.username,\n                    type: pathname.slice(1)\n                }\n                createNote(newNote).then(res => {\n                    note.addNote(res.data)\n                }).then(() => {\n                    alert.showAlert(\"Заметка успешно создана\", \"success\")\n                })\n            } catch(e) {\n                alert.showAlert(e.message, \"danger\")\n            }\n            // const newNote = {\n            //     title: noteTitle,\n            //     author: user.user.username\n            // }\n            // const response = createNote(newNote)\n            // note.addNote(response)\n            \n            // console.log(response)\n        } else {\n            alert.showAlert('Введите название заметки', \"warning\")\n        }\n    }\n\n    return (\n        <Form className=\"mt-2\" onSubmit={() => {\n            return setValue('')\n        }}>\n            <Form.Group \n                className=\"mb-3\" \n                value={value} \n                onChange={e => setValue(e.target.value)}\n            >\n                <Form.Control placeholder=\"Add new note\" />\n            </Form.Group>\n            <Button onClick={() => console.log(value)}>\n                XX\n            </Button>\n        </Form>\n        // <form onSubmit={click}>\n        //     <div>\n        //         <input\n        //             type=\"text\"\n        //             placeholder=\"Введите название заметки\"\n        //             value={value}\n        //             onChange={e => setValue(e.target.value)}\n        //         />\n        //     </div>\n        // </form>\n    );\n});\n\nexport default Forma;"]},"metadata":{},"sourceType":"module"}