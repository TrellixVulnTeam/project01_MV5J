{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/components/SortBlock.js\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport Note from '../components/Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortBlock = observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    notes\n  } = _ref;\n  const [sort, setSort] = useState('asc');\n  const [usNotes, setUsNotes] = [notes];\n\n  const onSort = type => {\n    const copyNotes = filterNotes.concat();\n    const sortType = sort === 'asc' ? 'desc' : 'asc';\n\n    const orderedNotes = _.orderBy(copyNotes, type, sortType);\n\n    setSort(sortType);\n    filterNotes = orderedNotes;\n  };\n\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n      notka: note\n    }, note._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 32\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}, \"N0u/eL63Mm5jHRrPLKo70zmvuqY=\"));\n_c2 = SortBlock;\nexport default SortBlock;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SortBlock$observer\");\n$RefreshReg$(_c2, \"SortBlock\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/components/SortBlock.js"],"names":["observer","React","ListGroup","Note","SortBlock","notes","sort","setSort","useState","usNotes","setUsNotes","onSort","type","copyNotes","filterNotes","concat","sortType","orderedNotes","_","orderBy","map","note","_id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,SAAS,GAAGJ,QAAQ,SAAE,QAAa;AAAA;;AAAA,MAAZ;AAACK,IAAAA;AAAD,GAAY;AAErC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB,CAACL,KAAD,CAA9B;;AAEA,QAAMM,MAAM,GAAIC,IAAD,IAAU;AACrB,UAAMC,SAAS,GAAGC,WAAW,CAACC,MAAZ,EAAlB;AACA,UAAMC,QAAQ,GAAGV,IAAI,KAAK,KAAT,GAAiB,MAAjB,GAA0B,KAA3C;;AACA,UAAMW,YAAY,GAAGC,CAAC,CAACC,OAAF,CAAUN,SAAV,EAAqBD,IAArB,EAA2BI,QAA3B,CAArB;;AACAT,IAAAA,OAAO,CAACS,QAAD,CAAP;AACAF,IAAAA,WAAW,GAAGG,YAAd;AACH,GAND;;AAQA,sBACI,QAAC,SAAD;AAAA,cACKZ,KAAK,CAACe,GAAN,CAAUC,IAAI,iBAAI,QAAC,IAAD;AAAqB,MAAA,KAAK,EAAEA;AAA5B,OAAWA,IAAI,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA,YAAlB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlByB,kCAA1B;MAAMlB,S;AAoBN,eAAeA,SAAf","sourcesContent":["import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { ListGroup } from 'react-bootstrap';\n\nimport Note from '../components/Note';\n\nconst SortBlock = observer( ({notes}) => {\n\n    const [sort, setSort] = useState('asc')\n    const [usNotes, setUsNotes] = [notes]\n\n    const onSort = (type) => {\n        const copyNotes = filterNotes.concat()\n        const sortType = sort === 'asc' ? 'desc' : 'asc'\n        const orderedNotes = _.orderBy(copyNotes, type, sortType)\n        setSort(sortType)\n        filterNotes = orderedNotes\n    }\n\n    return (\n        <ListGroup>\n            {notes.map(note => <Note key={note._id} notka={note} />)}\n        </ListGroup>\n    );\n});\n\nexport default SortBlock;"]},"metadata":{},"sourceType":"module"}