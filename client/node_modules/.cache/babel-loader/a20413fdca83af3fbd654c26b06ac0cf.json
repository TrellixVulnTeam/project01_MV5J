{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/pages/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport { observer } from 'mobx-react-lite';\nimport { Container, ListGroup } from 'react-bootstrap';\nimport { Context } from '..';\nimport { fetchNotes } from '../http/noteAPI';\nimport Forma from '../components/Forma';\nimport Note from '../components/Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = observer(_c = _s(() => {\n  _s();\n\n  const {\n    note\n  } = useContext(Context);\n  const {\n    user\n  } = useContext(Context);\n  const location = useLocation();\n  console.log(location);\n  useEffect(() => {\n    fetchNotes(user.user.username, 1, 9).then(data => {\n      note.setNotes(data);\n    });\n  }, []); // useEffect(() => {\n  //     fetchDevices(null, null, 1, 2).then(data => {\n  //         device.setDevices(data.rows)\n  //         device.setTotalCount(data.count)\n  //     })\n  // }, [])\n  // useEffect(() => {\n  //     fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\n  //         device.setDevices(data.rows)\n  //         device.setTotalCount(data.count)\n  //     })\n  // }, [device.page, device.selectedType, device.selectedBrand,])\n  // useEffect(() => {\n  //     check().then(data => {\n  //       if(data) {\n  //         user.setIsAuth(true)\n  //         user.setUser(data)\n  //       }\n  //     }).finally(() => setIsLoading(false))\n  //   }, [])\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Forma, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: note.notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        notka: note\n      }, note._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 41\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}, \"6RruBYFWVjTQeIlVpFoqF/McGLc=\", false, function () {\n  return [useLocation];\n}));\n_c2 = List;\nexport default List;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"List$observer\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/pages/List.js"],"names":["React","useContext","useEffect","useLocation","observer","Container","ListGroup","Context","fetchNotes","Forma","Note","List","note","user","location","console","log","username","then","data","setNotes","notes","map","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,iBAArC;AAEA,SAASC,OAAT,QAAwB,IAAxB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,IAAI,GAAGP,QAAQ,SAAG,MAAM;AAAA;;AAE1B,QAAM;AAACQ,IAAAA;AAAD,MAASX,UAAU,CAACM,OAAD,CAAzB;AACA,QAAM;AAACM,IAAAA;AAAD,MAASZ,UAAU,CAACM,OAAD,CAAzB;AACA,QAAMO,QAAQ,GAAGX,WAAW,EAA5B;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,UAAU,CAACK,IAAI,CAACA,IAAL,CAAUI,QAAX,EAAqB,CAArB,EAAwB,CAAxB,CAAV,CAAqCC,IAArC,CAA0CC,IAAI,IAAI;AAC9CP,MAAAA,IAAI,CAACQ,QAAL,CAAcD,IAAd;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT,CAR0B,CAc1B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAA,gBACKP,IAAI,CAACS,KAAL,CAAWC,GAAX,CAAeV,IAAI,iBAAI,QAAC,IAAD;AAAqB,QAAA,KAAK,EAAEA;AAA5B,SAAWA,IAAI,CAACW,GAAhB;AAAA;AAAA;AAAA;AAAA,cAAvB;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA7CoB;AAAA,UAIApB,WAJA;AAAA,GAArB;MAAMQ,I;AA+CN,eAAeA,IAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport { observer } from 'mobx-react-lite';\n\nimport { Container, ListGroup } from 'react-bootstrap';\n\nimport { Context } from '..';\nimport { fetchNotes } from '../http/noteAPI';\nimport Forma from '../components/Forma'\nimport Note from '../components/Note';\n\nconst List = observer ( () => {\n\n    const {note} = useContext(Context)\n    const {user} = useContext(Context)\n    const location = useLocation()\n\n    console.log(location)\n\n    useEffect(() => {\n        fetchNotes(user.user.username, 1, 9).then(data => {\n            note.setNotes(data)\n        })\n    }, [])\n\n    // useEffect(() => {\n    //     fetchDevices(null, null, 1, 2).then(data => {\n    //         device.setDevices(data.rows)\n    //         device.setTotalCount(data.count)\n    //     })\n    // }, [])\n\n    // useEffect(() => {\n    //     fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\n    //         device.setDevices(data.rows)\n    //         device.setTotalCount(data.count)\n    //     })\n    // }, [device.page, device.selectedType, device.selectedBrand,])\n\n    // useEffect(() => {\n    //     check().then(data => {\n    //       if(data) {\n    //         user.setIsAuth(true)\n    //         user.setUser(data)\n    //       }\n    //     }).finally(() => setIsLoading(false))\n    //   }, [])\n\n    return (\n        <Container>\n            <Forma />\n            <ListGroup>\n                {note.notes.map(note => <Note key={note._id} notka={note} />)}\n            </ListGroup>\n        </Container>\n    );\n});\n\nexport default List;"]},"metadata":{},"sourceType":"module"}