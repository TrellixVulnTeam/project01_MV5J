{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/components/AlertBlock.js\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react-lite';\nimport React, { useContext } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { CSSTransition } from 'react-transition-group';\nimport { Context } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AlertBlock = observer(_c = _s(() => {\n  _s();\n\n  const {\n    alert\n  } = useContext(Context);\n\n  if (alert.alertVisible) {\n    return /*#__PURE__*/_jsxDEV(CSSTransition, {\n      in: alert.alertVisible,\n      timeout: \"750ms\",\n      classNames: 'alert',\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: alert.type || \"warning\",\n        onClose: () => alert.hideAlert(false),\n        dismissible: true,\n        children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: alert.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}, \"rGB1ae4qxV0OC7X941DZKyw6o5k=\"));\n_c2 = AlertBlock;\nexport default AlertBlock;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AlertBlock$observer\");\n$RefreshReg$(_c2, \"AlertBlock\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/components/AlertBlock.js"],"names":["observer","React","useContext","Alert","CSSTransition","Context","AlertBlock","alert","alertVisible","type","hideAlert","text"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,KAAR,QAAoB,iBAApB;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AAEA,SAASC,OAAT,QAAwB,IAAxB;;;AAEA,MAAMC,UAAU,GAAGN,QAAQ,SAAG,MAAM;AAAA;;AAEhC,QAAM;AAACO,IAAAA;AAAD,MAAUL,UAAU,CAACG,OAAD,CAA1B;;AAEA,MAAIE,KAAK,CAACC,YAAV,EAAwB;AACpB,wBACE,QAAC,aAAD;AACE,MAAA,EAAE,EAAED,KAAK,CAACC,YADZ;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,UAAU,EAAE,OAHd;AAAA,6BAKE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAED,KAAK,CAACE,IAAN,IAAc,SAA9B;AAAyC,QAAA,OAAO,EAAE,MAAMF,KAAK,CAACG,SAAN,CAAgB,KAAhB,CAAxD;AAAgF,QAAA,WAAW,MAA3F;AAAA,+BACE,QAAC,KAAD,CAAO,OAAP;AAAA,oBAAgBH,KAAK,CAACI;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AACD,sBAAO,qCAAP;AACL,CAlB0B,kCAA3B;MAAML,U;AAoBN,eAAeA,UAAf","sourcesContent":["import { observer } from 'mobx-react-lite';\nimport React, {useContext} from 'react';\nimport {Alert} from 'react-bootstrap'\nimport {CSSTransition} from 'react-transition-group'\n\nimport { Context } from '..';\n\nconst AlertBlock = observer ( () => {\n\n    const {alert} = useContext(Context)\n\n    if (alert.alertVisible) {\n        return (\n          <CSSTransition\n            in={alert.alertVisible}\n            timeout='750ms'\n            classNames={'alert'}\n          >\n            <Alert variant={alert.type || \"warning\"} onClose={() => alert.hideAlert(false)} dismissible>\n              <Alert.Heading>{alert.text}</Alert.Heading>\n            </Alert>\n          </CSSTransition>\n        );\n      }\n      return <></>\n});\n\nexport default AlertBlock;"]},"metadata":{},"sourceType":"module"}