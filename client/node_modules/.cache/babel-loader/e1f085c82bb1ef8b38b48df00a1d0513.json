{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/pages/List.js\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react-lite';\nimport React, { useContext, useEffect } from 'react';\nimport { Container, ListGroup, Button } from 'react-bootstrap';\nimport { Context } from '..';\nimport Note from '../components/Note';\nimport { fetchNotes } from '../http/noteAPI';\nimport Form from '../components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = observer(_c = _s(() => {\n  _s();\n\n  const {\n    note\n  } = useContext(Context);\n  useEffect(() => {\n    fetchNotes().then(data => {\n      note.setNotes(data);\n    });\n  }, []);\n\n  const fetcher = () => {\n    console.log(note.notes);\n  }; // useEffect(() => {\n  //     check().then(data => {\n  //       if(data) {\n  //         user.setIsAuth(true)\n  //         user.setUser(data)\n  //       }\n  //     }).finally(() => setIsLoading(false))\n  //   }, [])\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: [note.notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 41\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: fetcher,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}, \"lIdykI5FZvLgtltWmw9ETjdPBRY=\"));\n_c2 = List;\nexport default List;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"List$observer\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/pages/List.js"],"names":["observer","React","useContext","useEffect","Container","ListGroup","Button","Context","Note","fetchNotes","Form","List","note","then","data","setNotes","fetcher","console","log","notes","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,MAA/B,QAA6C,iBAA7C;AACA,SAASC,OAAT,QAAwB,IAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,IAAI,GAAGX,QAAQ,SAAG,MAAM;AAAA;;AAE1B,QAAM;AAACY,IAAAA;AAAD,MAASV,UAAU,CAACK,OAAD,CAAzB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,UAAU,GAAGI,IAAb,CAAkBC,IAAI,IAAI;AACtBF,MAAAA,IAAI,CAACG,QAAL,CAAcD,IAAd;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAME,OAAO,GAAG,MAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,KAAjB;AACH,GAFD,CAV0B,CAc1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAA,iBACKP,IAAI,CAACO,KAAL,CAAWC,GAAX,CAAeR,IAAI,iBAAI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAvB,CADL,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAlCoB,kCAArB;MAAML,I;AAoCN,eAAeA,IAAf","sourcesContent":["import { observer } from 'mobx-react-lite';\nimport React, { useContext, useEffect } from 'react';\nimport { Container, ListGroup, Button } from 'react-bootstrap';\nimport { Context } from '..';\nimport Note from '../components/Note';\nimport { fetchNotes } from '../http/noteAPI';\nimport Form from '../components/Form'\n\nconst List = observer ( () => {\n\n    const {note} = useContext(Context)\n\n    useEffect(() => {\n        fetchNotes().then(data => {\n            note.setNotes(data)\n        })\n    }, [])\n\n    const fetcher = () => {\n        console.log(note.notes)\n    }\n\n    // useEffect(() => {\n    //     check().then(data => {\n    //       if(data) {\n    //         user.setIsAuth(true)\n    //         user.setUser(data)\n    //       }\n    //     }).finally(() => setIsLoading(false))\n    //   }, [])\n\n    return (\n        <Container>\n            <Form />\n            <ListGroup>\n                {note.notes.map(note => <Note note={note} />)}\n                <Button onClick={fetcher}>\nx\n                </Button>\n            </ListGroup>\n        </Container>\n    );\n});\n\nexport default List;"]},"metadata":{},"sourceType":"module"}