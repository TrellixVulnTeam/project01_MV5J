{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/components/Forma.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Form } from 'react-bootstrap';\nimport { Context } from '..';\nimport { createNote } from '../http/noteAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forma = observer(_c = _s(() => {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  const {\n    note\n  } = useContext(Context);\n  const {\n    pathname\n  } = useLocation();\n  const [value, setValue] = useState('');\n\n  const click = event => {\n    event.preventDefault(); // useEffect(() => {\n    //     fetchNotes(user.user.username, 1, 9).then(data => {\n    //         note.setNotes(data)\n    //     })\n    // }, [])\n\n    if (value.trim()) {\n      try {\n        const newNote = {\n          title: value,\n          author: user.user.username,\n          type: pathname.slice(1)\n        };\n        createNote(newNote).then(res => {\n          note.addNote(res.data);\n        });\n        setValue('');\n      } catch (e) {\n        alert(e.message);\n      } // const newNote = {\n      //     title: noteTitle,\n      //     author: user.user.username\n      // }\n      // const response = createNote(newNote)\n      // note.addNote(response)\n      // console.log(response)\n\n    } else {\n      alert('Введите название заметки');\n    } // setValue('')\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"mt-2\",\n    onSubmit: click,\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      value: noteTitle,\n      onChange: e => setNoteTitle(e.target.value),\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        placeholder: \"Add new note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this) // <form onSubmit={click}>\n  //     <div>\n  //         <input\n  //             type=\"text\"\n  //             placeholder=\"Введите название заметки\"\n  //             value={value}\n  //             onChange={e => setValue(e.target.value)}\n  //         />\n  //     </div>\n  // </form>\n  ;\n}, \"zk4XDNH0VO334V0xdzZwJ6sIi6I=\", false, function () {\n  return [useLocation];\n}));\n_c2 = Forma;\nexport default Forma;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Forma$observer\");\n$RefreshReg$(_c2, \"Forma\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/components/Forma.js"],"names":["React","useState","useContext","useLocation","observer","Form","Context","createNote","Forma","user","note","pathname","value","setValue","click","event","preventDefault","trim","newNote","title","author","username","type","slice","then","res","addNote","data","e","alert","message","noteTitle","setNoteTitle","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAAQC,IAAR,QAAmB,iBAAnB;AAEA,SAASC,OAAT,QAAwB,IAAxB;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,MAAMC,KAAK,GAAGJ,QAAQ,SAAG,MAAM;AAAA;;AAE3B,QAAM;AAACK,IAAAA;AAAD,MAASP,UAAU,CAACI,OAAD,CAAzB;AACA,QAAM;AAACI,IAAAA;AAAD,MAASR,UAAU,CAACI,OAAD,CAAzB;AACA,QAAM;AAACK,IAAAA;AAAD,MAAaR,WAAW,EAA9B;AAEA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMa,KAAK,GAAGC,KAAK,IAAI;AACnBA,IAAAA,KAAK,CAACC,cAAN,GADmB,CAGnB;AACA;AACA;AACA;AACA;;AAEA,QAAIJ,KAAK,CAACK,IAAN,EAAJ,EAAkB;AACd,UAAI;AACA,cAAMC,OAAO,GAAG;AACZC,UAAAA,KAAK,EAAEP,KADK;AAEZQ,UAAAA,MAAM,EAAEX,IAAI,CAACA,IAAL,CAAUY,QAFN;AAGZC,UAAAA,IAAI,EAAEX,QAAQ,CAACY,KAAT,CAAe,CAAf;AAHM,SAAhB;AAKAhB,QAAAA,UAAU,CAACW,OAAD,CAAV,CAAoBM,IAApB,CAAyBC,GAAG,IAAI;AAC5Bf,UAAAA,IAAI,CAACgB,OAAL,CAAaD,GAAG,CAACE,IAAjB;AACH,SAFD;AAGAd,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,OAVD,CAUE,OAAOe,CAAP,EAAU;AACRC,QAAAA,KAAK,CAACD,CAAC,CAACE,OAAH,CAAL;AACH,OAba,CAcd;AACA;AACA;AACA;AACA;AACA;AAEA;;AACH,KAtBD,MAsBO;AACHD,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACH,KAjCkB,CAkCnB;;AACH,GAnCD;;AAqCA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEf,KAAjC;AAAA,2BACI,QAAC,IAAD,CAAM,KAAN;AACI,MAAA,SAAS,EAAC,MADd;AAEI,MAAA,KAAK,EAAEiB,SAFX;AAGI,MAAA,QAAQ,EAAEH,CAAC,IAAII,YAAY,CAACJ,CAAC,CAACK,MAAF,CAASrB,KAAV,CAH/B;AAAA,6BAKI,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,WAAW,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,CAUI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBJ;AAqBH,CAlEqB;AAAA,UAICT,WAJD;AAAA,GAAtB;MAAMK,K;AAoEN,eAAeA,KAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\n\nimport {Form} from 'react-bootstrap'\n\nimport { Context } from '..';\nimport { createNote } from '../http/noteAPI';\n\nconst Forma = observer ( () => {\n\n    const {user} = useContext(Context)\n    const {note} = useContext(Context)\n    const {pathname} = useLocation()\n\n    const [value, setValue] = useState('')\n\n    const click = event => {\n        event.preventDefault()\n\n        // useEffect(() => {\n        //     fetchNotes(user.user.username, 1, 9).then(data => {\n        //         note.setNotes(data)\n        //     })\n        // }, [])\n\n        if (value.trim()) {\n            try {\n                const newNote = {\n                    title: value,\n                    author: user.user.username,\n                    type: pathname.slice(1)\n                }\n                createNote(newNote).then(res => {\n                    note.addNote(res.data)\n                })\n                setValue('')\n            } catch (e) {\n                alert(e.message)\n            }\n            // const newNote = {\n            //     title: noteTitle,\n            //     author: user.user.username\n            // }\n            // const response = createNote(newNote)\n            // note.addNote(response)\n            \n            // console.log(response)\n        } else {\n            alert('Введите название заметки')\n        }\n        // setValue('')\n    }\n\n    return (\n        <Form className=\"mt-2\" onSubmit={click}>\n            <Form.Group \n                className=\"mb-3\" \n                value={noteTitle} \n                onChange={e => setNoteTitle(e.target.value)}\n            >\n                <Form.Control placeholder=\"Add new note\" />\n            </Form.Group>\n        </Form>\n        // <form onSubmit={click}>\n        //     <div>\n        //         <input\n        //             type=\"text\"\n        //             placeholder=\"Введите название заметки\"\n        //             value={value}\n        //             onChange={e => setValue(e.target.value)}\n        //         />\n        //     </div>\n        // </form>\n    );\n});\n\nexport default Forma;"]},"metadata":{},"sourceType":"module"}