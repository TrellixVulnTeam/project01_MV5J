{"ast":null,"code":"var _jsxFileName = \"/Users/vmeset/React/project01/client/src/components/ModalBlock.js\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react-lite';\nimport React, { useContext } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { Context } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ModalBlock = observer(_c = _s(() => {\n  _s();\n\n  const {\n    alert\n  } = useContext(Context);\n\n  const handleClose = () => alert.setModalVisible(false);\n\n  const handleShow = () => alert.setModalVisible(true);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: alert.modalVisible,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Woohoo, you're reading this text in a modal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"rGB1ae4qxV0OC7X941DZKyw6o5k=\"));\n_c2 = ModalBlock;\nexport default ModalBlock;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalBlock$observer\");\n$RefreshReg$(_c2, \"ModalBlock\");","map":{"version":3,"sources":["/Users/vmeset/React/project01/client/src/components/ModalBlock.js"],"names":["observer","React","useContext","Modal","Button","Context","ModalBlock","alert","handleClose","setModalVisible","handleShow","modalVisible"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,SAASC,OAAT,QAAwB,IAAxB;;;AAEA,MAAMC,UAAU,GAAGN,QAAQ,SAAG,MAAM;AAAA;;AAEhC,QAAM;AAACO,IAAAA;AAAD,MAAUL,UAAU,CAACG,OAAD,CAA1B;;AAEA,QAAMG,WAAW,GAAG,MAAMD,KAAK,CAACE,eAAN,CAAsB,KAAtB,CAA1B;;AACA,QAAMC,UAAU,GAAG,MAAMH,KAAK,CAACE,eAAN,CAAsB,IAAtB,CAAzB;;AAEA,sBACI;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,KAAK,CAACI,YAAnB;AAAiC,MAAA,MAAM,EAAEH,WAAzC;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,KAAD,CAAO,MAAP;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEA,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAEA,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAkBH,CAzB0B,kCAA3B;MAAMF,U;AA2BN,eAAeA,UAAf","sourcesContent":["import { observer } from 'mobx-react-lite';\nimport React, {useContext} from 'react';\n\nimport { Modal, Button } from 'react-bootstrap';\nimport { Context } from '..';\n\nconst ModalBlock = observer ( () => {\n\n    const {alert} = useContext(Context)\n  \n    const handleClose = () => alert.setModalVisible(false);\n    const handleShow = () => alert.setModalVisible(true);\n\n    return (\n        <>\n            <Modal show={alert.modalVisible} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Удалить\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n});\n\nexport default ModalBlock;"]},"metadata":{},"sourceType":"module"}